definitions:
  main_go_internal_api_Struct.GetStatus:
    properties:
      crated_At:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  main_go_internal_api_Struct.InfoCandidate:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      status:
        properties:
          crated_At:
            type: string
          id:
            type: integer
          name:
            type: string
        type: object
      updated_at:
        type: string
    type: object
  main_go_internal_api_Struct.InfoError:
    properties:
      error:
        type: string
      info:
        type: string
      status:
        type: string
    type: object
  main_go_internal_api_Struct.Ok:
    properties:
      status:
        type: string
    type: object
  main_go_internal_api_Struct.RequestCandidate:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      status_id:
        type: integer
    type: object
  main_go_internal_api_Struct.RequestResumeUpdate:
    properties:
      description:
        type: string
      experience_id:
        type: integer
      resume_id:
        type: integer
    type: object
  main_go_internal_api_Struct.ResponseByVac:
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      vacancy:
        $ref: '#/definitions/main_go_internal_api_Struct.VacanciesToResponse'
    type: object
  main_go_internal_api_Struct.ResponseCreateCandiate:
    properties:
      candidate_Info:
        $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
      status:
        $ref: '#/definitions/main_go_internal_api_Struct.Ok'
      token:
        type: string
    type: object
  main_go_internal_api_Struct.StatusInfo:
    properties:
      info:
        type: string
      status:
        type: string
    type: object
  main_go_internal_api_Struct.VacanciesToResponse:
    properties:
      aboutWork:
        type: string
      created_at:
        type: string
      email:
        type: string
      employee_name:
        type: string
      experience:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      id:
        type: integer
      isVisible:
        type: boolean
      location:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      price:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /adm/user:
    delete:
      description: Позволяет удалить соискателя из БД. Доступ имеют только пользователи
        роли ADMIN
      parameters:
      - description: ID пользователя, которого нужно удалить
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удаление аккаунта соискателя
      tags:
      - ADMIN
  /exp:
    get:
      description: Возвращает список всех опыта, который будет использоваться в дальнейшем.
        Имееют доступ только пользователи роли ADMIN.
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив всех значений опыта. Если произошла ошибка
            - статус будет 'Err' и будет возвращен текст ошибки!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получение списка опыта
      tags:
      - ADMIN
    post:
      consumes:
      - application/json
      description: Добавляет новую запись в таблицу, которая отвечает за хранение
        "констант опыта"
      parameters:
      - description: Наименование нового опыта
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Добавляет новое значение в таблицу
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.Ok'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID (авторизовать
            пользователя)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавление новой записи в таблицу с опытом
      tags:
      - ADMIN
  /status:
    get:
      consumes:
      - application/json
      description: Возвращает список всех значений статусов, который будет использоваться
        в дальнейшем. Имееют доступ только пользователи роли ADMIN.
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив всех значений статусов. Если произошла ошибка
            - статус будет 'Err' и будет возвращен текст ошибки!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID (авторизовать
            пользователя)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получение списка статусов
      tags:
      - ADMIN
    post:
      consumes:
      - application/json
      description: Добавляет новую запись в таблицу, которая отвечает за хранение
        "констант статуса"
      parameters:
      - description: Наименование нового статуса
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Добавляет новое значение в таблицу и просто возвращает статус
            'Ok!'
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.Ok'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID (авторизовать
            пользователя)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавление новой записи в таблицу с статусом
      tags:
      - ADMIN
  /user:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию о соискателе при помощи
        его персонального токена
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и данные пользователя
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить информцию о соискателе
      tags:
      - candidate
    post:
      consumes:
      - application/json
      description: Позволяет добавлять нового соискателя в систему. В ответе клиент
        получит токен, с помощью которого сможет получить доступ к некоторому функционалу.
        Доступ имеют роли Candidate и ADMIN
      parameters:
      - description: Основные данные для добавления соискателя. В поле статус указывайте
          ID, который уже есть в системе!
        in: body
        name: Candidate_info
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestCandidate'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные нового пользователя и его персональный
            токен, который можно использовать в течении 24 часов!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateCandiate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Добавить нового соискателя
      tags:
      - candidate
    put:
      consumes:
      - application/json
      description: Позволяет обновить всю основную информацию о соискателе при помощи
        его персонального токена и тела запроса. Доступно только пользователям группы
        Candidate и ADMIN
      parameters:
      - description: Данные о соискателе, на которые нужно обновить в системе
        in: body
        name: CandidateInfo
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestCandidate'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Обновить информцию о соискателе
      tags:
      - candidate
  /user/all:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про всех соискателях.
        Доступно только пользователям с ролью ADMIN
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и массив всех данных о соискателях
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить информцию про всех соискателях
      tags:
      - ADMIN
  /user/response:
    get:
      consumes:
      - application/json
      description: Позволяет получить массив всех откликов соискателя. В результате
        клиент получит ID отклика, данные о всех вакансиях, на которые он откликнулся,
        а также статус этого отклика
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает ID отклика, данные об этой вакансии, на которую
            откликнулся пользователь и статус отклика '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseByVac'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Все отклики соискателя
      tags:
      - candidate
  /user/resume:
    delete:
      consumes:
      - application/json
      description: Позволяет удалить данные об резюме пользователя. Доступ имеют роли
        Candidate и ADMIN
      parameters:
      - description: ID резюме пользователя, чтобы найти и удалить его
        in: query
        name: resume_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удалить резюме соискателя
      tags:
      - candidate
    put:
      consumes:
      - application/json
      description: Позволяет обновить данные, которые касаются только резюме соискателя.
        Доступ имеют роли Candidate и ADMIN
      parameters:
      - description: Данные, которые можно изменить. Это только опыт (стаж) и описание.
          НО также указываете ID резюме, которое необходимо изменить!
        in: body
        name: ResumaData
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestResumeUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Обновить данные об резюме соискателя
      tags:
      - candidate
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
