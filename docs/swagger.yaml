definitions:
  main_go_internal_api_Struct.GetAllFromCandidates:
    properties:
      CandidateInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
      Status:
        type: string
    type: object
  main_go_internal_api_Struct.GetStatus:
    properties:
      CreatedAt:
        type: string
      ID:
        type: integer
      Name:
        type: string
    type: object
  main_go_internal_api_Struct.InfoCandidate:
    properties:
      CreatedAt:
        type: string
      Email:
        type: string
      ID:
        type: integer
      Name:
        type: string
      Password:
        type: string
      PhoneNumber:
        type: string
      StatusInfo:
        properties:
          CreatedAt:
            type: string
          ID:
            type: integer
          Name:
            type: string
        type: object
      UpdatedAt:
        type: string
    type: object
  main_go_internal_api_Struct.InfoError:
    properties:
      Error:
        type: string
      Info:
        type: string
      Status:
        type: string
    type: object
  main_go_internal_api_Struct.NumberOfVacancies:
    properties:
      Quantity:
        type: integer
      Status:
        type: string
    type: object
  main_go_internal_api_Struct.Ok:
    properties:
      Status:
        type: string
    type: object
  main_go_internal_api_Struct.RequestCandidate:
    properties:
      Email:
        type: string
      Name:
        type: string
      Password:
        type: string
      PhoneNumber:
        type: string
      StatusId:
        type: integer
    type: object
  main_go_internal_api_Struct.RequestEmployee:
    properties:
      Email:
        type: string
      INN:
        type: string
      NameOrganization:
        type: string
      Password:
        type: string
      PhoneNumber:
        type: string
      StatusID:
        type: integer
    type: object
  main_go_internal_api_Struct.RequestEmployer:
    properties:
      Email:
        type: string
      NameOrganization:
        type: string
      Password:
        type: string
      PhoneNumber:
        type: string
      StatusID:
        type: integer
    type: object
  main_go_internal_api_Struct.RequestResume:
    properties:
      Description:
        type: string
      ExperienceID:
        type: integer
    type: object
  main_go_internal_api_Struct.RequestResumeUpdate:
    properties:
      ExperienceID:
        type: integer
      ResumeID:
        type: integer
      description:
        type: string
    type: object
  main_go_internal_api_Struct.ResponseAllResponsesOnVacancy:
    properties:
      ResponseInfo:
        items:
          properties:
            CandidateInfo:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
            CreatedAt:
              type: string
            ID:
              type: integer
            StatusInfo:
              $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
          type: object
        type: array
      Status:
        type: string
      VacancyInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.VacancyData'
    type: object
  main_go_internal_api_Struct.ResponseAllVacancyByEmployee:
    properties:
      EmployerID:
        type: integer
      VacanciesInfo:
        items:
          $ref: '#/definitions/main_go_internal_api_Struct.VacancyData'
        type: array
      status:
        $ref: '#/definitions/main_go_internal_api_Struct.Ok'
    type: object
  main_go_internal_api_Struct.ResponseAuthorization:
    properties:
      CandidateInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate'
      EmployerInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateEmployer'
    type: object
  main_go_internal_api_Struct.ResponseByVac:
    properties:
      ID:
        type: integer
      StatusInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      VacancyInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.VacanciesToResponse'
    type: object
  main_go_internal_api_Struct.ResponseCreateCandidate:
    properties:
      CandidateInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
      Status:
        type: string
      Token:
        type: string
    type: object
  main_go_internal_api_Struct.ResponseCreateEmployer:
    properties:
      EmployerInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.SuccessEmployer'
      Status:
        $ref: '#/definitions/main_go_internal_api_Struct.Ok'
      Token:
        type: string
    type: object
  main_go_internal_api_Struct.ResponseCreateNewResponse:
    properties:
      ID:
        type: integer
      ResponseStatus:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      Status:
        type: string
      VacancyInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.VacancyData'
    type: object
  main_go_internal_api_Struct.ResponseCreateNewVacancy:
    properties:
      EmployerInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.SuccessEmployer'
      Status:
        type: string
      VacancyInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.VacancyData'
    type: object
  main_go_internal_api_Struct.ResponseEmployerInfo:
    properties:
      EmployerInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.SuccessEmployer'
      Status:
        type: string
    type: object
  main_go_internal_api_Struct.ResponseInfoByVacancy:
    properties:
      Status:
        type: string
      VacancyInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.VacancyData_Limit'
    type: object
  main_go_internal_api_Struct.ResponseOnVacancy:
    properties:
      IsResponsed:
        type: boolean
      Status:
        properties:
          CreatedAt:
            type: string
          ID:
            type: integer
          Name:
            type: string
        type: object
    type: object
  main_go_internal_api_Struct.ResponsePatch:
    properties:
      ResponseID:
        type: integer
      StatusID:
        type: integer
    type: object
  main_go_internal_api_Struct.ResponseVac:
    properties:
      About:
        type: string
      Email:
        type: string
      ExperienceId:
        type: integer
      IsVisible:
        type: boolean
      Location:
        type: string
      PhoneNumber:
        type: string
      Price:
        type: integer
      VacancyName:
        type: string
    type: object
  main_go_internal_api_Struct.ResumeResult:
    properties:
      CandidateInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
      ResumesInfo:
        items:
          $ref: '#/definitions/main_go_internal_api_Struct.ResumeResult_slice'
        type: array
    type: object
  main_go_internal_api_Struct.ResumeResult_slice:
    properties:
      CreatedAt:
        type: string
      Description:
        type: string
      ExperienceInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      ID:
        type: integer
      UpdatedAt:
        type: string
    type: object
  main_go_internal_api_Struct.StatusInfo:
    properties:
      Info:
        type: string
      Status:
        type: string
    type: object
  main_go_internal_api_Struct.SuccessEmployer:
    properties:
      CreatedAt:
        type: string
      Email:
        type: string
      ID:
        type: integer
      INN:
        type: string
      NameOrganization:
        type: string
      Password:
        type: string
      PhoneNumber:
        type: string
      Status:
        properties:
          CreatedAt:
            type: string
          ID:
            type: integer
          Name:
            type: string
        type: object
      UpdatedAt:
        type: string
    type: object
  main_go_internal_api_Struct.VacanciesToResponse:
    properties:
      AboutWork:
        type: string
      CreatedAt:
        type: string
      Email:
        type: string
      EmployerName:
        type: string
      ExperienceInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      ID:
        type: integer
      IsVisible:
        type: boolean
      Location:
        type: string
      Name:
        type: string
      PhoneNumber:
        type: string
      Price:
        type: integer
      UpdatedAt:
        type: string
    type: object
  main_go_internal_api_Struct.VacancyData:
    properties:
      AboutWork:
        type: string
      CreatedAt:
        type: string
      Email:
        type: string
      Experience:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      ID:
        type: integer
      IsVisible:
        type: boolean
      Location:
        type: string
      Name:
        type: string
      PhoneNumber:
        type: string
      Price:
        type: integer
      UpdatedAt:
        type: string
    type: object
  main_go_internal_api_Struct.VacancyData_Limit:
    properties:
      AboutWork:
        type: string
      CreatedAt:
        type: string
      Email:
        type: string
      EmployerInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.SuccessEmployer'
      ExperienceInfo:
        $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
      ID:
        type: integer
      IsVisible:
        type: boolean
      Location:
        type: string
      Name:
        type: string
      PhoneNumber:
        type: string
      Price:
        type: integer
      UpdatedAt:
        type: string
    type: object
  main_go_internal_api_Struct.VacancyPut:
    properties:
      About:
        type: string
      Email:
        type: string
      ExperienceId:
        type: integer
      ID:
        type: integer
      IsVisible:
        type: boolean
      Location:
        type: string
      PhoneNumber:
        type: string
      Price:
        type: integer
      VacancyName:
        type: string
    type: object
info:
  contact: {}
paths:
  /adm/emp:
    delete:
      description: Позволяет удалить работодателя из системы. Доступ имеют только
        пользователи роли ADMIN
      parameters:
      - description: ID работодателя, которого нужно удалить
        in: query
        name: empID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удаление аккаунта работодателя
      tags:
      - ADMIN
  /adm/exp:
    delete:
      description: Позволяет удалить запись из системы. Доступ имеют только пользователи
        роли ADMIN
      parameters:
      - description: наименование записи, которую нужно удалить
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удаление опыта
      tags:
      - ADMIN
  /adm/status:
    delete:
      description: Позволяет удалить запись из системы. Доступ имеют только пользователи
        роли ADMIN
      parameters:
      - description: наименование записи, которую нужно удалить
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удаление статуса
      tags:
      - ADMIN
  /adm/token:
    get:
      description: Позволяет проверить токен пользователя на актуальность
      parameters:
      - description: токен, который надо проверить
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Проверка токена
      tags:
      - ADMIN
  /adm/user:
    delete:
      description: Позволяет удалить соискателя из системы. Доступ имеют только пользователи
        роли ADMIN
      parameters:
      - description: ID пользователя, которого нужно удалить
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удаление аккаунта соискателя
      tags:
      - ADMIN
  /auth:
    get:
      consumes:
      - application/json
      description: Позволяет получить новый токен для пользователя, чтобы у него сохранился
        доступ к функционалу
      parameters:
      - description: email пользователя
        in: query
        name: email
        required: true
        type: string
      - description: password пользователя
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные пользователя и его новый токен.
            Если он авторизовался как соискатель, то будут возвращены его данные.
            А если как работодатель, то тоже только его
          schema:
            $ref: '#/definitions/main_go_internal_api_Struct.ResponseAuthorization'
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Авторизовать пользователя
      tags:
      - ADMIN
  /emp:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про работодатля. Доступно
        всем авторизованным пользователям, поэтому токен обязателен!
      parameters:
      - description: ID работодателя
        in: query
        name: employerID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и данные о работодателе
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseEmployerInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить информцию про работодателя
      tags:
      - employer
    post:
      consumes:
      - application/json
      description: Позволяет добавлять нового работодателя в систему. В ответе клиент
        получит токен, с помощью которого сможет получить доступ к некоторому функционалу.
      parameters:
      - description: Основные данные для добавления работодателя. В поле статус указывайте
          ID, который уже есть в системе!
        in: body
        name: Employer_info
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestEmployee'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные работодателя и новый токен
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateEmployer'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Добавить нового работодателя
      tags:
      - employer
    put:
      consumes:
      - application/json
      description: Позволяет обновить всю основную информацию о работодателе при помощи
        его персонального токена и тела запроса. Доступно только пользователям группы
        employee и ADMIN
      parameters:
      - description: Данные о работодателе, на которые нужно обновить в системе
        in: body
        name: Employer_info
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestEmployer'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Обновить информцию о работодателе
      tags:
      - employer
  /emp/all:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про всех работодатлей.
        Доступно только пользователям с ролью ADMIN
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и массив всех данных о работодателях
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.SuccessEmployer'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить информцию про всех работодателей
      tags:
      - employer
  /emp/auth:
    get:
      consumes:
      - application/json
      description: Позволяет получить новый токен для работодателя, чтобы у него сохранился
        доступ к функционалу
      parameters:
      - description: email работодателя
        in: query
        name: email
        required: true
        type: string
      - description: password работодателя
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные работодателя и новый токен
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateEmployer'
            type: array
        "401":
          description: Возвращает ошибку, если такого пользователя в системе нету.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Авторизовать работодателя
      tags:
      - employer
  /exp:
    get:
      description: Возвращает список всех опыта, который будет использоваться в дальнейшем.
        Имееют доступ все.
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив всех значений опыта. Если произошла ошибка
            - статус будет 'Err' и будет возвращен текст ошибки!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Получение списка опыта
      tags:
      - ADMIN
    post:
      consumes:
      - application/json
      description: Добавляет новую запись в таблицу, которая отвечает за хранение
        "констант опыта"
      parameters:
      - description: Наименование нового опыта
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Добавляет новое значение в таблицу
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.Ok'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID (авторизовать
            пользователя)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавление новой записи в таблицу с опытом
      tags:
      - ADMIN
  /status:
    get:
      consumes:
      - application/json
      description: Возвращает список всех значений статусов, который будет использоваться
        в дальнейшем. Имееют доступ все.
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает массив всех значений статусов. Если произошла ошибка
            - статус будет 'Err' и будет возвращен текст ошибки!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.GetStatus'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID (авторизовать
            пользователя)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Получение списка статусов
      tags:
      - ADMIN
    post:
      consumes:
      - application/json
      description: Добавляет новую запись в таблицу, которая отвечает за хранение
        "констант статуса"
      parameters:
      - description: Наименование нового статуса
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Добавляет новое значение в таблицу и просто возвращает статус
            'Ok!'
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.Ok'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить из токена ID (авторизовать
            пользователя)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавление новой записи в таблицу с статусом
      tags:
      - ADMIN
  /user:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию о соискателе при помощи
        его ID. Доступно всем авторизованным пользователям, поэтому токен обязателен!
      parameters:
      - description: ID соискателя
        in: query
        name: candidateID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и данные пользователя
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.GetAllFromCandidates'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить информцию о соискателе
      tags:
      - candidate
    post:
      consumes:
      - application/json
      description: Позволяет добавлять нового соискателя в систему. В ответе клиент
        получит токен, с помощью которого сможет получить доступ к некоторому функционалу.
        Доступ имеют роли Candidate и ADMIN
      parameters:
      - description: Основные данные для добавления соискателя. В поле статус указывайте
          ID, который уже есть в системе!
        in: body
        name: Candidate_info
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestCandidate'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные нового пользователя и его персональный
            токен, который можно использовать в течении 24 часов!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Добавить нового соискателя
      tags:
      - candidate
    put:
      consumes:
      - application/json
      description: Позволяет обновить всю основную информацию о соискателе при помощи
        его персонального токена и тела запроса. Доступно только пользователям группы
        Candidate и ADMIN
      parameters:
      - description: Данные о соискателе, на которые нужно обновить в системе
        in: body
        name: CandidateInfo
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestCandidate'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Обновить информцию о соискателе
      tags:
      - candidate
  /user/all:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про всех соискателях.
        Доступно только пользователям с ролью ADMIN
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и массив всех данных о соискателях
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить информцию про всех соискателях
      tags:
      - candidate
  /user/auth:
    get:
      consumes:
      - application/json
      description: Позволяет получить новый токен для соискателя, чтобы у него сохранился
        доступ к функционалу
      parameters:
      - description: email соискателя
        in: query
        name: email
        required: true
        type: string
      - description: password соискателя
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные соискателя и новый токен
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Авторизовать соискателя
      tags:
      - candidate
  /user/recover:
    get:
      consumes:
      - application/json
      description: Позволяет восстановить пароль пользователю, если он забыл его
      parameters:
      - description: новый пароль пользователя
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные соискателя и новый токен
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Восстановить пароль
      tags:
      - ADMIN
  /user/response:
    get:
      consumes:
      - application/json
      description: Позволяет получить массив всех откликов соискателя. В результате
        клиент получит ID отклика, данные о всех вакансиях, на которые он откликнулся,
        а также статус этого отклика
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает ID отклика, данные об этой вакансии, на которую
            откликнулся пользователь и статус отклика '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseByVac'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Все отклики соискателя
      tags:
      - candidate
  /user/resume:
    delete:
      consumes:
      - application/json
      description: Позволяет удалить данные об резюме пользователя. Доступ имеют роли
        Candidate и ADMIN
      parameters:
      - description: ID резюме пользователя, чтобы найти и удалить его
        in: query
        name: resume_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удалить резюме соискателя
      tags:
      - candidate
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про все резюме пользователя,
        которые у него есть в системе. Доступно для всех пользователей, но токен обязательный!
      parameters:
      - description: ID соискателя для получения его всех резюмешек
        in: query
        name: candidate_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и массив всех данных резюме соискателя
          schema:
            $ref: '#/definitions/main_go_internal_api_Struct.ResumeResult'
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Информация про все резюме
      tags:
      - candidate
    post:
      consumes:
      - application/json
      description: Позволяет добавить к соискателю новое резюме.
      parameters:
      - description: Основные данные для резюме. В поле experience_id указывайте ID,
          который уже есть в системе!
        in: body
        name: InfoResume
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestResume'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.Ok'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавить новое резюме для соискателя
      tags:
      - candidate
    put:
      consumes:
      - application/json
      description: Позволяет обновить данные, которые касаются только резюме соискателя.
        Доступ имеют роли Candidate и ADMIN
      parameters:
      - description: Данные, которые можно изменить. Это только опыт (стаж) и описание.
          НО также указываете ID резюме, которое необходимо изменить!
        in: body
        name: ResumaData
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.RequestResumeUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Обновить данные об резюме соискателя
      tags:
      - candidate
  /vac:
    delete:
      description: Позволяет удалить вакансию из системы. Доступ имеют только пользователи
        роли employee и ADMIN
      parameters:
      - description: ID вакансии, которую нужно удалить
        in: query
        name: vacancyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает статус и краткую информацию '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удаление вакансии
      tags:
      - vacancy
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про все вакансии, которые
        у есть, но в ограниченном количестве. Limit - кол-во вакансий, которое нужно
        вернуть. LastID - после какого ID будет идти отсчёт limit.
      parameters:
      - description: Кол-во вакансий, в соответствии с которым нужно вернуть их
        in: query
        name: limit
        required: true
        type: integer
      - description: После какого ID будет идти отсчёт limit
        in: query
        name: last_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и массив всех данных вакансий
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.VacancyData_Limit'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Получение списка вакансий по 'странично'
      tags:
      - vacancy
    post:
      consumes:
      - application/json
      description: Позволяет добавлять новую вакансию в систему. В ответе клиент получит
        данные вакансии и работодателя. Доступ имеют роли Employee и ADMIN
      parameters:
      - description: Основные данные для добавления вакансии. В поле exp_id указывайте
          ID, который уже есть в системе!
        in: body
        name: Vacancy_Info
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.ResponseVac'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!', данные новой вакансии и работодателя
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateNewVacancy'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавить новую вакансию
      tags:
      - vacancy
    put:
      consumes:
      - application/json
      description: Позволяет обновить всю основную информацию о вакансии. Доступно
        только пользователям группы employee и ADMIN
      parameters:
      - description: Данные о вакансии, на которые нужно обновить в системе
        in: body
        name: VacancyInfo
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.VacancyPut'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Обновить информцию о вакансии
      tags:
      - vacancy
  /vac/emp:
    get:
      consumes:
      - application/json
      description: Позволяет получить массив всех вакансий работодателя. В результате
        клиент получит ID работодателя и массив всех его вакансий.
      produces:
      - application/json
      responses:
        "200":
          description: 'Возвращает ID отклика, данные об этой вакансии, на которую
            откликнулся пользователь и статус отклика '
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseAllVacancyByEmployee'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Все вакансии одного работодателя
      tags:
      - vacancy
  /vac/info:
    get:
      consumes:
      - application/json
      description: Позволяет получить все данные вакансии по её ID. Если да, то какой
        у неё статус.
      parameters:
      - description: ID вакансии, о которой хотите получить данные
        in: query
        name: vacancyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает информацию о вакансии
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseInfoByVacancy'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Данные вакансии по ID
      tags:
      - vacancy
  /vac/num:
    get:
      consumes:
      - application/json
      description: Позволяет получить количество вакансий в системе, доступных для
        получения. Доступно всем пользователям
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и количество вакансий
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.NumberOfVacancies'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Получить кол-во вакансий в системе
      tags:
      - vacancy
  /vac/response:
    delete:
      consumes:
      - application/json
      description: Позволяет удалить данные об отклике пользователя на вакансию. Доступ
        имеют роли Candidate и ADMIN
      parameters:
      - description: ID вакансии
        in: query
        name: vacancy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Удалить отклик соискателя
      tags:
      - vacancy
    get:
      consumes:
      - application/json
      description: Позволяет получить массив всех откликов соискателей на одну определенную
        вакансию.
      parameters:
      - description: ID вакансии, на которую надо посмотреть все отклики
        in: query
        name: vacancyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает данные вакансии и все её отклики
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseAllResponsesOnVacancy'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Все отклики соискателей на вакансию
      tags:
      - vacancy
    patch:
      consumes:
      - application/json
      description: Позволяет изменить статус отклика на вакансию. Доступно только
        пользователям группы employee и ADMIN
      parameters:
      - description: ID отклика, статус которого нужно обновить, а также ID статуса,
          на который нужно поменять
        in: body
        name: Help_data
        required: true
        schema:
          $ref: '#/definitions/main_go_internal_api_Struct.ResponsePatch'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и небольшую информацию
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Изменить статус отклика
      tags:
      - vacancy
    post:
      consumes:
      - application/json
      description: Позволяет создать в системе новый отклик соискателя на вакансию.
      parameters:
      - description: ID вакансии, на которую нужно сделать отклик!
        in: query
        name: vacancyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!, ID отклика, данные вакансии, на которую
            откликнулись и статус отклика
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseCreateNewResponse'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Добавить новый отклик на вакансию
      tags:
      - vacancy
  /vac/time:
    get:
      consumes:
      - application/json
      description: Позволяет получить всю основную информацию про все вакансии, которые
        у есть, но в ограниченном количестве. Limit - кол-во вакансий, которое нужно
        вернуть. CreatedAt - время, после которого будет идти отсчёт limit.
      parameters:
      - description: Кол-во вакансий, в соответствии с которым нужно вернуть их
        in: query
        name: limit
        required: true
        type: integer
      - description: 'время, после которого будет идти отсчёт limit. Сюда указываем
          время создания последней отображаемой вакансии. Работает, только если использовать
          время в формате, как в примере: ''2025-06-06T22:40:44Z'' или ''2006-01-02T15:04:05Z'''
        in: query
        name: created_at
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!' и массив всех данных вакансий
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.VacancyData_Limit'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      summary: Получение списка вакансий по 'странично' по ВРЕМЕНИ
      tags:
      - vacancy
  /vac/user:
    get:
      consumes:
      - application/json
      description: Позволяет узнать, откликнулся ли ранее пользователь на эту вакансию.
        Если да, то какой у неё статус.
      parameters:
      - description: ID вакансии, на которую надо посмотреть отклик
        in: query
        name: vacancyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает откликнулся ли уже пользователь на эту вакансию
            и если это правда, то возвращает статус отклика
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.ResponseOnVacancy'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Проверка отклика
      tags:
      - vacancy
  /vac/visible:
    patch:
      consumes:
      - application/json
      description: Позволяет изменить видимость вакансии. Доступно только пользователям
        группы employee и ADMIN
      parameters:
      - description: ID вакансии, которую работодатель хочет скрыть или вернуть на
          всеобщее обозрение
        in: query
        name: vacancyID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает статус 'Ok!'
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.StatusInfo'
            type: array
        "400":
          description: Возвращает ошибку, если не удалось получить данные из запроса
            (токен или передача каких-либо других данных)
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "401":
          description: Возвращает ошибку, если у пользователя нету доступа к этому
            функционалу.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
        "500":
          description: Возвращает ошибку, если на сервере произошла непредвиденная
            ошибка.
          schema:
            items:
              $ref: '#/definitions/main_go_internal_api_Struct.InfoError'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Изменить видимость вакансии
      tags:
      - vacancy
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
