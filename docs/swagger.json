{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/all/vac": {
            "get": {
                "tags": [
                    "delete"
                ],
                "summary": "не использовать! УДАЛИТЬ!",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "post": {
                "description": "Позволяет выдать новый токен пользователю, если у него нету актуального 'Bearer Token' или был, но он уже не действителен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Выдать новый токен пользователю",
                "parameters": [
                    {
                        "description": "Актуальные логин (почта) и пароль пользователя",
                        "name": "UserEmailNPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestNewToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает актуальный и новый токен для пользователя. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки! Также будет известно, где именно произошла ошибка!",
                        "schema": {
                            "$ref": "#/definitions/main.TokenForUser"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить body, который отвечает за данные пользователя!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось найти пользователя в БД, который соответствовал бы данным, которые были получены сервером в результате этого запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/emp": {
            "post": {
                "description": "Позволяет создать работодателя в системе. Будет возвращен ID и токен для работодателя!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Создать работодателя",
                "parameters": [
                    {
                        "description": "Данные работодателя",
                        "name": "EmpData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает ID (И попозже будет Token) работодателя.",
                        "schema": {
                            "$ref": "#/definitions/main.NewEmployer"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить body-request!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не добавить работодателя с корректными данными. Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/emp/vacs": {
            "get": {
                "description": "Позволяет получить массив данных о всех вакансиях, которые есть у работодателя. Для этого нужно передать ID работодателя!",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Получить все вакансии работодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID работодателя",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает массив актуальных вакансий от одного работодателя.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sqlite.ResponseVac"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить ID",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось получить список всех вакансий! Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/empID": {
            "get": {
                "description": "Позволяет получить данные работодателя по его ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Получить данные работодателя по его ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID работодателя",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает ID вакансии.",
                        "schema": {
                            "$ref": "#/definitions/sqlite.RequestEmployee"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить ID работодателя из path!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось получить данные работодателя, который соответствует переданному ID. Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Позволяет добавить нового пользователя в систему, если пользователя с такими данными не существовало!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Создать нового пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя. А именно: Почта (email), пароль (password), name (имя), номер телефона (phoneNumber)",
                        "name": "UserData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestAdd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает актуальный токен для пользователя, а также ID пользователя. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки! Также будет известно, где именно произошла ошибка!",
                        "schema": {
                            "$ref": "#/definitions/main.AddNewUser"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить body, который отвечает за данные пользователя!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось добавить пользователя в БД, который соответствовал бы данным, которые были получены сервером в результате этого запроса или не удалось создать для него токен! Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/user/otklik": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает отклик на вакансию при помощи ID пользователя и вакансии. Статус отклика автоматически присваевается \"Ожидание\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Создание отклика на вакансию",
                "parameters": [
                    {
                        "description": "ID пользователя и вакансии, на которую нужно добавить отклик",
                        "name": "IDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RequestResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает ID отклика. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки! Также будет известно, где именно произошла ошибка!",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить request body. К ответу прикрепляется ID, который получил сервер, а также где именно произошла ошибка.",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    }
                }
            }
        },
        "/user/otkliks/{id}": {
            "get": {
                "description": "Возвращает список всех откликов для определенного пользователя по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Получение списка всех откликов для пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "UID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и массив откликов. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки!",
                        "schema": {
                            "$ref": "#/definitions/main.AllUserResponseOK"
                        }
                    },
                    "404": {
                        "description": "Возвращает ошибку, если не удалось преобразовать передаваемый параметр (ID) через URL.",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/vac": {
            "get": {
                "description": "Позволяет получить определенное кол-во вакансий.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Получить список вакансий",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Лимит сколько вакансий",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "С какого ID надо показывать вакансии",
                        "name": "lastID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает список данных вакансий",
                        "schema": {
                            "$ref": "#/definitions/main.ListOfVacancies"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить body вакансий!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось получить данные вакансий. Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            },
            "post": {
                "description": "Позволяет создать новую вакансию в системе. Будет возвращен ID вакансии!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Создать вакансию",
                "parameters": [
                    {
                        "description": "Данные вакансии",
                        "name": "VacData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Vacancy_Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает ID вакансии.",
                        "schema": {
                            "$ref": "#/definitions/main.NewVacancy"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить body-request!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось добавить вакансию с переданными данными. Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/vacID": {
            "get": {
                "description": "Позволяет получить данные о вакансии по её ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Получить данные о вакансии по её ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает данные вакансии",
                        "schema": {
                            "$ref": "#/definitions/main.TakeVacancyByID"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось распарсить ID вакансии из строки запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.InfoError"
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если не удалось получить данные работодателя, который соответствует переданному ID. Конкретная ошибка будет в результате запроса!",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.AddNewUser": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                }
            }
        },
        "main.AllUserResponseOK": {
            "type": "object",
            "properties": {
                "otkliks": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.InfoError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.ListOfVacancies": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sqlite.VacancyTake"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.NewEmployer": {
            "type": "object",
            "properties": {
                "emp_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.NewVacancy": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "vacancyID": {
                    "type": "integer"
                }
            }
        },
        "main.RequestAdd": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "main.RequestEmployee": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "nameOrg": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "main.RequestNewToken": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "main.RequestResponse": {
            "type": "object",
            "properties": {
                "UID": {
                    "type": "integer"
                },
                "vac_id": {
                    "type": "integer"
                }
            }
        },
        "main.SimpleError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main.TakeVacancyByID": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "about": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emp_id": {
                    "type": "integer"
                },
                "exp": {
                    "type": "string"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "vac_name": {
                    "type": "string"
                }
            }
        },
        "main.TokenForUser": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "main.Vacancy_Body": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emp_id": {
                    "type": "integer"
                },
                "exp": {
                    "type": "integer"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "vac_name": {
                    "type": "string"
                }
            }
        },
        "sqlite.RequestEmployee": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "nameOrg": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "sqlite.ResponseVac": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "about": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emp_id": {
                    "type": "integer"
                },
                "exp": {
                    "type": "string"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "vac_name": {
                    "type": "string"
                }
            }
        },
        "sqlite.VacancyTake": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "about": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emp_id": {
                    "type": "integer"
                },
                "exp": {
                    "type": "string"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "nameOrg": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "vac_name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}