{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/adm/user": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить соискателя из БД. Доступ имеют только пользователи роли ADMIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Удаление аккаунта соискателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя, которого нужно удалить",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/exp": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех опыта, который будет использоваться в дальнейшем. Имееют доступ только пользователи роли ADMIN.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Получение списка опыта",
                "responses": {
                    "200": {
                        "description": "Возвращает массив всех значений опыта. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет новую запись в таблицу, которая отвечает за хранение \"констант опыта\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Добавление новой записи в таблицу с опытом",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Наименование нового опыта",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Добавляет новое значение в таблицу",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID (авторизовать пользователя)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех значений статусов, который будет использоваться в дальнейшем. Имееют доступ только пользователи роли ADMIN.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Получение списка статусов",
                "responses": {
                    "200": {
                        "description": "Возвращает массив всех значений статусов. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID (авторизовать пользователя)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет новую запись в таблицу, которая отвечает за хранение \"констант статуса\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Добавление новой записи в таблицу с статусом",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Наименование нового статуса",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Добавляет новое значение в таблицу и просто возвращает статус 'Ok!'",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID (авторизовать пользователя)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user/response": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить массив всех откликов соискателя. В результате клиент получит ID отклика, данные о всех вакансиях, на которые он откликнулся, а также статус этого отклика",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Все отклики соискателя",
                "responses": {
                    "200": {
                        "description": "Возвращает ID отклика, данные об этой вакансии, на которую откликнулся пользователь и статус отклика ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseByVac"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main_go_internal_api_Struct.GetStatus": {
            "type": "object",
            "properties": {
                "crated_At": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.InfoError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.Ok": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseByVac": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "vacancy": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.VacanciesToResponse"
                }
            }
        },
        "main_go_internal_api_Struct.StatusInfo": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.VacanciesToResponse": {
            "type": "object",
            "properties": {
                "aboutWork": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employee_name": {
                    "type": "string"
                },
                "experience": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "id": {
                    "type": "integer"
                },
                "isVisible": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}