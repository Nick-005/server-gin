{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/adm/emp": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить работодателя из системы. Доступ имеют только пользователи роли ADMIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Удаление аккаунта работодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID работодателя, которого нужно удалить",
                        "name": "empID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/adm/exp": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить запись из системы. Доступ имеют только пользователи роли ADMIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Удаление опыта",
                "parameters": [
                    {
                        "type": "string",
                        "description": "наименование записи, которую нужно удалить",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/adm/status": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить запись из системы. Доступ имеют только пользователи роли ADMIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Удаление статуса",
                "parameters": [
                    {
                        "type": "string",
                        "description": "наименование записи, которую нужно удалить",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/adm/token": {
            "get": {
                "description": "Позволяет проверить токен пользователя на актуальность",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Проверка токена",
                "parameters": [
                    {
                        "type": "string",
                        "description": "токен, который надо проверить",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/adm/user": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить соискателя из системы. Доступ имеют только пользователи роли ADMIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Удаление аккаунта соискателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя, которого нужно удалить",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "description": "Позволяет получить новый токен для пользователя, чтобы у него сохранился доступ к функционалу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Авторизовать пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email пользователя",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password пользователя",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные пользователя и его новый токен. Если он авторизовался как соискатель, то будут возвращены его данные. А если как работодатель, то тоже только его",
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.ResponseAuthorization"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/emp": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить всю основную информацию про работодатля. Доступно всем авторизованным пользователям, поэтому токен обязателен!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Получить информцию про работодателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID работодателя",
                        "name": "employerID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и данные о работодателе",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseEmployerInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет обновить всю основную информацию о работодателе при помощи его персонального токена и тела запроса. Доступно только пользователям группы employee и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Обновить информцию о работодателе",
                "parameters": [
                    {
                        "description": "Данные о работодателе, на которые нужно обновить в системе",
                        "name": "Employer_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.RequestEmployer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Позволяет добавлять нового работодателя в систему. В ответе клиент получит токен, с помощью которого сможет получить доступ к некоторому функционалу.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Добавить нового работодателя",
                "parameters": [
                    {
                        "description": "Основные данные для добавления работодателя. В поле статус указывайте ID, который уже есть в системе!",
                        "name": "Employer_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.RequestEmployee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные работодателя и новый токен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateEmployer"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/emp/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить всю основную информацию про всех работодатлей. Доступно только пользователям с ролью ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Получить информцию про всех работодателей",
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и массив всех данных о работодателях",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.SuccessEmployer"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/emp/auth": {
            "get": {
                "description": "Позволяет получить новый токен для работодателя, чтобы у него сохранился доступ к функционалу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employer"
                ],
                "summary": "Авторизовать работодателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email работодателя",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password работодателя",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные работодателя и новый токен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateEmployer"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если такого пользователя в системе нету.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/exp": {
            "get": {
                "description": "Возвращает список всех опыта, который будет использоваться в дальнейшем. Имееют доступ все.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Получение списка опыта",
                "responses": {
                    "200": {
                        "description": "Возвращает массив всех значений опыта. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет новую запись в таблицу, которая отвечает за хранение \"констант опыта\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Добавление новой записи в таблицу с опытом",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Наименование нового опыта",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Добавляет новое значение в таблицу",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID (авторизовать пользователя)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Возвращает список всех значений статусов, который будет использоваться в дальнейшем. Имееют доступ все.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Получение списка статусов",
                "responses": {
                    "200": {
                        "description": "Возвращает массив всех значений статусов. Если произошла ошибка - статус будет 'Err' и будет возвращен текст ошибки!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID (авторизовать пользователя)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет новую запись в таблицу, которая отвечает за хранение \"констант статуса\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Добавление новой записи в таблицу с статусом",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Наименование нового статуса",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Добавляет новое значение в таблицу и просто возвращает статус 'Ok!'",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить из токена ID (авторизовать пользователя)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить всю основную информацию о соискателе при помощи его ID. Доступно всем авторизованным пользователям, поэтому токен обязателен!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Получить информцию о соискателе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID соискателя",
                        "name": "candidateID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и данные пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.GetAllFromCandidates"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет обновить всю основную информацию о соискателе при помощи его персонального токена и тела запроса. Доступно только пользователям группы Candidate и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Обновить информцию о соискателе",
                "parameters": [
                    {
                        "description": "Данные о соискателе, на которые нужно обновить в системе",
                        "name": "CandidateInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.RequestCandidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoCandidate"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Позволяет добавлять нового соискателя в систему. В ответе клиент получит токен, с помощью которого сможет получить доступ к некоторому функционалу. Доступ имеют роли Candidate и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Добавить нового соискателя",
                "parameters": [
                    {
                        "description": "Основные данные для добавления соискателя. В поле статус указывайте ID, который уже есть в системе!",
                        "name": "Candidate_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.RequestCandidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные нового пользователя и его персональный токен, который можно использовать в течении 24 часов!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить всю основную информацию про всех соискателях. Доступно только пользователям с ролью ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Получить информцию про всех соискателях",
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и массив всех данных о соискателях",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoCandidate"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user/auth": {
            "get": {
                "description": "Позволяет получить новый токен для соискателя, чтобы у него сохранился доступ к функционалу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Авторизовать соискателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email соискателя",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password соискателя",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные соискателя и новый токен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user/recover": {
            "get": {
                "description": "Позволяет восстановить пароль пользователю, если он забыл его",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "Восстановить пароль",
                "parameters": [
                    {
                        "type": "string",
                        "description": "новый пароль пользователя",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные соискателя и новый токен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user/response": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить массив всех откликов соискателя. В результате клиент получит ID отклика, данные о всех вакансиях, на которые он откликнулся, а также статус этого отклика",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Все отклики соискателя",
                "responses": {
                    "200": {
                        "description": "Возвращает ID отклика, данные об этой вакансии, на которую откликнулся пользователь и статус отклика ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseByVac"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/user/resume": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить всю основную информацию про все резюме пользователя, которые у него есть в системе. Доступно для всех пользователей, но токен обязательный!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Информация про все резюме",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID соискателя для получения его всех резюмешек",
                        "name": "candidate_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и массив всех данных резюме соискателя",
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.ResumeResult"
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет обновить данные, которые касаются только резюме соискателя. Доступ имеют роли Candidate и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Обновить данные об резюме соискателя",
                "parameters": [
                    {
                        "description": "Данные, которые можно изменить. Это только опыт (стаж) и описание. НО также указываете ID резюме, которое необходимо изменить!",
                        "name": "ResumaData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.RequestResumeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет добавить к соискателю новое резюме.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Добавить новое резюме для соискателя",
                "parameters": [
                    {
                        "description": "Основные данные для резюме. В поле experience_id указывайте ID, который уже есть в системе!",
                        "name": "InfoResume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.RequestResume"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить данные об резюме пользователя. Доступ имеют роли Candidate и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "candidate"
                ],
                "summary": "Удалить резюме соискателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резюме пользователя, чтобы найти и удалить его",
                        "name": "resume_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac": {
            "get": {
                "description": "Позволяет получить всю основную информацию про все вакансии, которые у есть, но в ограниченном количестве. Limit - кол-во вакансий, которое нужно вернуть. LastID - после какого ID будет идти отсчёт limit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Получение списка вакансий по 'странично'",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Кол-во вакансий, в соответствии с которым нужно вернуть их",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "После какого ID будет идти отсчёт limit",
                        "name": "last_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и массив всех данных вакансий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData_Limit"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет обновить всю основную информацию о вакансии. Доступно только пользователям группы employee и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Обновить информцию о вакансии",
                "parameters": [
                    {
                        "description": "Данные о вакансии, на которые нужно обновить в системе",
                        "name": "VacancyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.VacancyPut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет добавлять новую вакансию в систему. В ответе клиент получит данные вакансии и работодателя. Доступ имеют роли Employee и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Добавить новую вакансию",
                "parameters": [
                    {
                        "description": "Основные данные для добавления вакансии. В поле exp_id указывайте ID, который уже есть в системе!",
                        "name": "Vacancy_Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.ResponseVac"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!', данные новой вакансии и работодателя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateNewVacancy"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить вакансию из системы. Доступ имеют только пользователи роли employee и ADMIN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Удаление вакансии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии, которую нужно удалить",
                        "name": "vacancyID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус и краткую информацию ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/emp": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить массив всех вакансий работодателя. В результате клиент получит ID работодателя и массив всех его вакансий.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Все вакансии одного работодателя",
                "responses": {
                    "200": {
                        "description": "Возвращает ID отклика, данные об этой вакансии, на которую откликнулся пользователь и статус отклика ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseAllVacancyByEmployee"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/info": {
            "get": {
                "description": "Позволяет получить все данные вакансии по её ID. Если да, то какой у неё статус.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Данные вакансии по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии, о которой хотите получить данные",
                        "name": "vacancyID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает информацию о вакансии",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseInfoByVacancy"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/num": {
            "get": {
                "description": "Позволяет получить количество вакансий в системе, доступных для получения. Доступно всем пользователям",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Получить кол-во вакансий в системе",
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и количество вакансий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.NumberOfVacancies"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/response": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет получить массив всех откликов соискателей на одну определенную вакансию.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Все отклики соискателей на вакансию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии, на которую надо посмотреть все отклики",
                        "name": "vacancyID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает данные вакансии и все её отклики",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseAllResponsesOnVacancy"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет создать в системе новый отклик соискателя на вакансию.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Добавить новый отклик на вакансию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии, на которую нужно сделать отклик!",
                        "name": "vacancyID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!, ID отклика, данные вакансии, на которую откликнулись и статус отклика",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateNewResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет удалить данные об отклике пользователя на вакансию. Доступ имеют роли Candidate и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Удалить отклик соискателя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии",
                        "name": "vacancy_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет изменить статус отклика на вакансию. Доступно только пользователям группы employee и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Изменить статус отклика",
                "parameters": [
                    {
                        "description": "ID отклика, статус которого нужно обновить, а также ID статуса, на который нужно поменять",
                        "name": "Help_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main_go_internal_api_Struct.ResponsePatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и небольшую информацию",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/time": {
            "get": {
                "description": "Позволяет получить всю основную информацию про все вакансии, которые у есть, но в ограниченном количестве. Limit - кол-во вакансий, которое нужно вернуть. CreatedAt - время, после которого будет идти отсчёт limit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Получение списка вакансий по 'странично' по ВРЕМЕНИ",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Кол-во вакансий, в соответствии с которым нужно вернуть их",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "время, после которого будет идти отсчёт limit. Сюда указываем время создания последней отображаемой вакансии. Работает, только если использовать время в формате, как в примере: '2025-06-06T22:40:44Z' или '2006-01-02T15:04:05Z'",
                        "name": "created_at",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!' и массив всех данных вакансий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData_Limit"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет узнать, откликнулся ли ранее пользователь на эту вакансию. Если да, то какой у неё статус.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Проверка отклика",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии, на которую надо посмотреть отклик",
                        "name": "vacancyID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает откликнулся ли уже пользователь на эту вакансию и если это правда, то возвращает статус отклика",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.ResponseOnVacancy"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        },
        "/vac/visible": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет изменить видимость вакансии. Доступно только пользователям группы employee и ADMIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vacancy"
                ],
                "summary": "Изменить видимость вакансии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вакансии, которую работодатель хочет скрыть или вернуть на всеобщее обозрение",
                        "name": "vacancyID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает статус 'Ok!'",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.StatusInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Возвращает ошибку, если не удалось получить данные из запроса (токен или передача каких-либо других данных)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "401": {
                        "description": "Возвращает ошибку, если у пользователя нету доступа к этому функционалу.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    },
                    "500": {
                        "description": "Возвращает ошибку, если на сервере произошла непредвиденная ошибка.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoError"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main_go_internal_api_Struct.GetAllFromCandidates": {
            "type": "object",
            "properties": {
                "CandidateInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.InfoCandidate"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.GetStatus": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.InfoCandidate": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "StatusInfo": {
                    "type": "object",
                    "properties": {
                        "CreatedAt": {
                            "type": "string"
                        },
                        "ID": {
                            "type": "integer"
                        },
                        "Name": {
                            "type": "string"
                        }
                    }
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.InfoError": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "Info": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.NumberOfVacancies": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "type": "integer"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.Ok": {
            "type": "object",
            "properties": {
                "Status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.RequestCandidate": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "StatusId": {
                    "type": "integer"
                }
            }
        },
        "main_go_internal_api_Struct.RequestEmployee": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "INN": {
                    "type": "string"
                },
                "NameOrganization": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "StatusID": {
                    "type": "integer"
                }
            }
        },
        "main_go_internal_api_Struct.RequestEmployer": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "NameOrganization": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "StatusID": {
                    "type": "integer"
                }
            }
        },
        "main_go_internal_api_Struct.RequestResume": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ExperienceID": {
                    "type": "integer"
                }
            }
        },
        "main_go_internal_api_Struct.RequestResumeUpdate": {
            "type": "object",
            "properties": {
                "ExperienceID": {
                    "type": "integer"
                },
                "ResumeID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseAllResponsesOnVacancy": {
            "type": "object",
            "properties": {
                "ResponseInfo": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "CandidateInfo": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.InfoCandidate"
                            },
                            "CreatedAt": {
                                "type": "string"
                            },
                            "ID": {
                                "type": "integer"
                            },
                            "StatusInfo": {
                                "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                            }
                        }
                    }
                },
                "Status": {
                    "type": "string"
                },
                "VacancyInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseAllVacancyByEmployee": {
            "type": "object",
            "properties": {
                "EmployerID": {
                    "type": "integer"
                },
                "VacanciesInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData"
                    }
                },
                "status": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseAuthorization": {
            "type": "object",
            "properties": {
                "CandidateInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateCandidate"
                },
                "EmployerInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.ResponseCreateEmployer"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseByVac": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "StatusInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "VacancyInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.VacanciesToResponse"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseCreateCandidate": {
            "type": "object",
            "properties": {
                "CandidateInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.InfoCandidate"
                },
                "Status": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseCreateEmployer": {
            "type": "object",
            "properties": {
                "EmployerInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.SuccessEmployer"
                },
                "Status": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.Ok"
                },
                "Token": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseCreateNewResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "ResponseStatus": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "Status": {
                    "type": "string"
                },
                "VacancyInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseCreateNewVacancy": {
            "type": "object",
            "properties": {
                "EmployerInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.SuccessEmployer"
                },
                "Status": {
                    "type": "string"
                },
                "VacancyInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseEmployerInfo": {
            "type": "object",
            "properties": {
                "EmployerInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.SuccessEmployer"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseInfoByVacancy": {
            "type": "object",
            "properties": {
                "Status": {
                    "type": "string"
                },
                "VacancyInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.VacancyData_Limit"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseOnVacancy": {
            "type": "object",
            "properties": {
                "IsResponsed": {
                    "type": "boolean"
                },
                "Status": {
                    "type": "object",
                    "properties": {
                        "CreatedAt": {
                            "type": "string"
                        },
                        "ID": {
                            "type": "integer"
                        },
                        "Name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "main_go_internal_api_Struct.ResponsePatch": {
            "type": "object",
            "properties": {
                "ResponseID": {
                    "type": "integer"
                },
                "StatusID": {
                    "type": "integer"
                }
            }
        },
        "main_go_internal_api_Struct.ResponseVac": {
            "type": "object",
            "properties": {
                "About": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "ExperienceId": {
                    "type": "integer"
                },
                "IsVisible": {
                    "type": "boolean"
                },
                "Location": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "VacancyName": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.ResumeResult": {
            "type": "object",
            "properties": {
                "CandidateInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.InfoCandidate"
                },
                "ResumesInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main_go_internal_api_Struct.ResumeResult_slice"
                    }
                }
            }
        },
        "main_go_internal_api_Struct.ResumeResult_slice": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ExperienceInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "ID": {
                    "type": "integer"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.StatusInfo": {
            "type": "object",
            "properties": {
                "Info": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.SuccessEmployer": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "INN": {
                    "type": "string"
                },
                "NameOrganization": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Status": {
                    "type": "object",
                    "properties": {
                        "CreatedAt": {
                            "type": "string"
                        },
                        "ID": {
                            "type": "integer"
                        },
                        "Name": {
                            "type": "string"
                        }
                    }
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.VacanciesToResponse": {
            "type": "object",
            "properties": {
                "AboutWork": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmployerName": {
                    "type": "string"
                },
                "ExperienceInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "ID": {
                    "type": "integer"
                },
                "IsVisible": {
                    "type": "boolean"
                },
                "Location": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.VacancyData": {
            "type": "object",
            "properties": {
                "AboutWork": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Experience": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "ID": {
                    "type": "integer"
                },
                "IsVisible": {
                    "type": "boolean"
                },
                "Location": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.VacancyData_Limit": {
            "type": "object",
            "properties": {
                "AboutWork": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmployerInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.SuccessEmployer"
                },
                "ExperienceInfo": {
                    "$ref": "#/definitions/main_go_internal_api_Struct.GetStatus"
                },
                "ID": {
                    "type": "integer"
                },
                "IsVisible": {
                    "type": "boolean"
                },
                "Location": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "main_go_internal_api_Struct.VacancyPut": {
            "type": "object",
            "properties": {
                "About": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "ExperienceId": {
                    "type": "integer"
                },
                "ID": {
                    "type": "integer"
                },
                "IsVisible": {
                    "type": "boolean"
                },
                "Location": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "Price": {
                    "type": "integer"
                },
                "VacancyName": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}